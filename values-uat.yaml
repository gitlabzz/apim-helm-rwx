# Axway API-Management Helm-Chart values file.
# To use the helmet chart, create your own values.<customer>. and use it for installation as suggested in the readme.

global:
  # ImagePullSecrets made available to all Deployments/StateFullSets
  #imagePullSecrets: []
  #  - name: myRegistryKeySecretName
  imagePullSecrets:
    - name: registrypullsecret

  imagePullPolicy: "Always"

  # Setup the docker repository used to pull images for anm, apimgr & traffic
  # Example: docker-registry.demo.axway.com/other-demo
  # You can override the docker-registry used for anm, api-manager & api-traffic
  dockerRepository: "harbor-np.bcthk.info"
  # Setup the image tag (e.g. 7.7-20210530)
  # You can override the image tag used for anm, api-manager & api-traffic
  imageTag: "1"

  updateStrategy: "RollingUpdate"

  # The domain name used by allComponents as default e.g. domainname=apim.${LBADDR}.nip.io
  domainName: "10.168.31.18.nip.io"
  LBADDR: "10.168.31.18"
  ACCEPT_GENERAL_CONDITIONS: "yes"

  #nodeName: bct-tkc-workload-nonprod-worker-nodepool-a1-smmng-7fcb4c7fwd8pw

  # AZURE, OPENSHIFT, MINIKUBE
  platform: ""
  # If you provide your license in your myValues.yaml, a Secret axway-apim-license will be created and automatically mountered
  # into the API Gateway PODs.
  # Alternatively, you can use your own secret and reference it via licenseSecretName below.
  # Or you can build the image with the license included.
  license:
  # FIPS=1
  # SalesForce Connector=1
  # ServiceNow Connector=1
  # analytics=1
  # api_visual_mapper=1
  # apiportal=1
  # company=Axway
  # deployment_type=nondocker
  # expires=Tue, 31 May 2022 22:33:19 GMT
  # license_id=TEMP
  # mcafee=1
  # name=Axway
  # sdkgenerator=1
  # unrestricted=1
  # version=7.7
  # SIGNATURE: 9afc9456be083d8de4dbc2852c7355b3facb7baa39a436e958206e0907f210f8
  # SIGNATURE: 281de913a37409533ab89227741d4f56453196b280a571489bedad9587e8454a
  # SIGNATURE: 666a9d715879224a362a25e722cb39c9c9fb5e25d6af3cbdb1fab273e5b2a00a
  # SIGNATURE: 3ec0fbb6f8b7c85599f627e5c668f95884ed2d76303ac470b4d1a68091fada9b
  # SIGNATURE: 24177d3041919e07ddd47cb74373d97eb2f002399a40c106c066b4ff0889a15e
  # SIGNATURE: e8d3634188035eb84005e126b2596f004388934c8d5d05ed6cd25df7a91886ec
  # SIGNATURE: 326a5ab70945170b9cb45b8444ae8d1a0652ac0b6c1d24623f71a1bb7158e73d
  # SIGNATURE: fc3c2332f93d2f82c3b24dda93e366f4e046a824f5e8a32ec6f33a14a062ce27

  # If you want to use your own secret, specify the name of the secret here,
  # which contains the license Base64 encoded with key license
  existingLicenseSecret:

##################################################################################################################################
#   A D M I N - N O D E M A N A G E R
##################################################################################################################################
anm:
  name: "anm"
  enabled: true
  replicas: 1
  image: "apim_uat/apim_anm"
  imageTag: "latest"
  containerPorts:
    anm: 8090
  imagePullSecrets:
    - name: registrypullsecret

  # Controls the service for ANM incl. belonging ingress resources
  service:
    type: "ClusterIP"
    loadBalancerIP: ""
    port: 8090
    nodePort: ""
    labels: { }
    annotations: { }

  # Configuration is based on environment variables as desribed here:
  # https://docs.axway.com/bundle/axway-open-docs/page/docs/apim_installation/apigw_containers/container_env_variables/index.html#environment-variables-reference
  config: { emtDeploymentEnabled: true }
    # emtTopologyTtl: 120
    # emtDeploymentEnabled: false
    # emtTopologyLogDest: 1
    # emtTopologyLogDir: "/opt/Axway/apigateway/logs"
    # emtTopologyLogEnabled: false
    # emtTopologyLogInterval: 60
  # emtHeapSize: 1024
  # emtTraceLevel: INFO
  # emtParentHost: "anm"

  # Allows you to add any environment variables
  extraEnvs: [ ]
  # - name: MY_ENVIRONMENT_VAR
  #   value: the_value_goes_here

  securityContext: { }

  # Allows you to add any config files
  extraVolumes: [ ]
  # - name: extras
  #   emptyDir: {}
  extraVolumeMounts: [ ]
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: [ ]
  #  - name: some-secret-stuff
  #    secretName: some-secret-stuff
  #    path: /opt/Axway/apigateway/conf/some/secret

  # Defines where to mount required standard volumes such as events, opentraffic, etc. into the container
  volumeMountsPaths:
    # Where to mount events (defaults to /opt/Axway/apigateway/events)
    events: ""
    # Where to mount audit (defaults to /opt/Axway/apigateway/logs)
    audit: ""

  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

  nameOverride: ""

  labels: { }

  # General ingress settings.
  httpproxy:
    enabled: true
    name: anm
    fqdn: anm-uatk8apim.bcthk.info
    protocol: tls
    port: 8090
    secretName: cert-delegation/tls-secret

  podAnnotations: { }

  readinessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: readiness.anm
        - name: Authorization
          value: "Basic YXBpLXNpdC1heHdheTpBeHdheUAxMjM0"
      path: /api/topology/version
      port: anm
      scheme: HTTPS
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  livenessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: liveness.anm
        - name: Authorization
          value: "Basic YXBpLXNpdC1heHdheTpBeHdheUAxMjM0"
      path: /api/topology/version
      port: anm
      scheme: HTTPS
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  resources:
    requests:
      cpu: "100m"
      memory: "500Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"

  args:
    - /opt/Axway/apigateway/posix/bin/start-emt-nodemanager

  # Configure JVM settings
  jvm:
    # Set to false if you prefer to include (bake in) your jvm.xml using the mergeDir option
    enabled: true
    config: |
      <ConfigurationFragment>
         <VMArg name="-Ddont.expect.100.continue=true"/>
      </ConfigurationFragment>

##################################################################################################################################
#   API MANAGER
##################################################################################################################################
apimgr:
  name: apimmgmt
  enabled: true
  # For API-Manager it is recommended to have only 1 replica
  replicas: 1
  nameOverride: ""
  image: "apim_uat/apim_apig"
  imageTag: "latest"
  containerPorts:
    manager: 8075
  imagePullSecrets:
    - name: registrypullsecret

  service:
    type: "ClusterIP"
    loadBalancerIP: ""
    labels: { }
    annotations: { }
    ports:
      - name: manager
        port: 8075
        targetPort: 8075
        nodePort: ""
        ingress:
          enabled: true
          host: manager

  # Configuration is based on environment variables as desribed here:
  # https://docs.axway.com/bundle/axway-open-docs/page/docs/apim_installation/apigw_containers/container_env_variables/index.html#environment-variables-reference
  config: { }
    # Comma separated list of hosts:port
    # emtAnmHosts:
    # emtPollInterval: 30
    # emtDeploymentEnabled: false
  # emtHeapSize: 1024
  # emtTraceLevel: INFO
  # emtParentHost: "api-manager"

  # Allows you to add any environment variables
  extraEnvs:
    - name: SMTP_HOST
      value: "bctrelay.ad01.bcthk.com"
    - name: SMTP_PORT
      value: "25"
    - name: SMTP_CONNTYPE
      value: "NONE"

  # Defines where to mount required standard volumes such as events, opentraffic, etc. into the container
  volumeMountsPaths:
    # Where to mount events (defaults to /opt/Axway/apigateway/events)
    events: ""

  # Allows you to add any config files
  extraVolumes: [ ]
  # - name: extras
  #   emptyDir: {}
  extraVolumeMounts: [ ]
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: [ ]
  #  - name: some-secret-stuff
  #    secretName: some-secret-stuff
  #    path: /opt/Axway/apigateway/conf/some/secret

  httpproxy:
    enabled: true
    name: apimgr
    fqdn: manager-uatk8apim.bcthk.info
    protocol: tls
    port: 8075
    secretName: cert-delegation/tls-secret

  podAnnotations: { }

  args:
    - /opt/Axway/apigateway/posix/bin/start-emt-instance

  securityContext: { }

  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000

  readinessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: readiness.apimgr
      path: /
      port: manager
      scheme: HTTPS
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  livenessProbe:
    httpGet:
      path: /
      port: manager
      httpHeaders:
        - name: k8sprobe
          value: liveness.apimgr
      scheme: HTTPS
    initialDelaySeconds: 300
    periodSeconds: 30
    timeoutSeconds: 15
    failureThreshold: 3
    successThreshold: 1

  resources:
    requests:
      cpu: "200m"
      memory: "750Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"

  lifecycle:
    preStop:
      exec:
        command: [ "sleep","10" ]

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  # Configure JVM settings
  jvm:
    # Set to false if you prefer to include (bake in) your jvm.xml using the mergeDir option
    enabled: true
    config: |
      <ConfigurationFragment>
         <VMArg name="-DCASSANDRA_PROTOCOL_VERSION=4" />
         <VMArg name="-Dio.swagger.parser.util.RemoteUrl.trustAll=true"/>
         <VMArg name="-Dio.swagger.v3.parser.util.RemoteUrl.trustAll=true"/>
      </ConfigurationFragment>

##################################################################################################################################
#   API TRAFFIC
##################################################################################################################################
apitraffic:
  name: "apitraffic"
  enabled: true
  replicas: 2
  image: "apim_uat/apim_apig"
  imageTag: "latest"
  nameOverride: ""
  imagePullSecrets:
    - name: registrypullsecret

  # Allows you to add any environment variables
  extraEnvs: [ ]
  # - name: MY_ENVIRONMENT_VAR
  #   value: the_value_goes_here

  # Ports to be exposed by the API-Traffic PODs
  containerPorts:
    traffic: 8065
    plain: 8080
    tls: 8081
    oauth: 8089

  # Service and Ingress configuration for the API-Traffic PoD
  service:
    type: "ClusterIP"
    loadBalancerIP: ""
    labels: { }
    annotations: { }
    ports:
      - name: traffic
        port: 8065
        targetPort: 8065
        nodePort: ""
        ingress:
          enabled: true
          host: traffic
      - name: oauth
        port: 8089
        targetPort: 8089
        nodePort: ""
        ingress:
          enabled: true
          host: oauth
      - name: tls
        port: 8081
        targetPort: 8081
        nodePort: ""
        ingress:
          enabled: true
          host: tls
      - name: plain
        port: 8080
        targetPort: 8080
        nodePort: ""
        # Ingress is currently not supported for HTTP-Connections - Would required another Ingress with additional annotations
        ingress:
          enabled: false
          host: plain

  # Configuration is based on environment variables as desribed here:
  # https://docs.axway.com/bundle/axway-open-docs/page/docs/apim_installation/apigw_containers/container_env_variables/index.html#environment-variables-reference
  config: { }
    # Comma separated list of hosts:port
    # emtAnmHosts:
    # emtPollInterval: 30
    # emtDeploymentEnabled: false
  # emtHeapSize: 1024
  # emtTraceLevel: INFO
  # emtParentHost: "api-gateway"

  # Defines where to mount required standard volumes such as events, opentraffic, etc. into the container
  volumeMountsPaths:
    # events mount location (defaults to /opt/Axway/apigateway/events)
    events: ""
    # opentraffic mount location (defaults to /opt/Axway/apigateway/logs/opentraffic)
    opentraffic: ""

  # Allows you to add any config files
  extraVolumes: [ ]
  # - name: extras
  #   emptyDir: {}
  extraVolumeMounts: [ ]
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: [ ]
  #  - name: some-secret-stuff
  #    secretName: some-secret-stuff
  #    path: /opt/Axway/apigateway/conf/some/secret

  httpproxyTraffic:
    enabled: true
    name: traffic
    svcname: traffic
    fqdn: traffic-uatk8apim.bcthk.info
    protocol: tls
    port: 8065
    secretName: cert-delegation/tls-secret

  httpproxyOauth:
    enabled: true
    name: oauth
    svcname: traffic
    fqdn: oauth-uatk8apim.bcthk.info
    protocol: tls
    port: 8089
    secretName: cert-delegation/tls-secret

  httpproxyTls:
    enabled: true
    name: tls
    svcname: traffic
    fqdn: tls-uatk8apim.bcthk.info
    protocol: tls
    port: 8081
    secretName: cert-delegation/tls-secret

  podAnnotations: { }

  resources:
    requests:
      cpu: "200m"
      memory: "1536Mi"
    limits:
      cpu: "1000m"
      memory: "1536Mi"

  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000

  readinessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: readiness.apimgr
      path: /healthcheck
      port: plain
      scheme: HTTP
    initialDelaySeconds: 40
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  livenessProbe:
    httpGet:
      path: /healthcheck
      port: plain
      httpHeaders:
        - name: k8sprobe
          value: liveness.apimgr
      scheme: HTTP
    initialDelaySeconds: 300
    periodSeconds: 30
    timeoutSeconds: 15
    failureThreshold: 3
    successThreshold: 1

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  args:
    - /opt/Axway/apigateway/posix/bin/start-emt-instance

  lifecycle:
    preStop:
      exec:
        command: [ "sleep","10" ]

  extraContainers: [ ]
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

  # Configure JVM settings
  jvm:
    # Set to false if you prefer to include (bake in) your jvm.xml using the mergeDir option
    enabled: true
    config: |
      <ConfigurationFragment>
         <VMArg name="-DCASSANDRA_PROTOCOL_VERSION=4" />
         <VMArg name="-Dio.swagger.parser.util.RemoteUrl.trustAll=true"/>
         <VMArg name="-Dio.swagger.v3.parser.util.RemoteUrl.trustAll=true"/>
      </ConfigurationFragment>

##################################################################################################################################
#   API-Portal
##################################################################################################################################
apiportal:
  enabled: true
  replicas: 2
  image: "apim_uat/apim_portal"
  imageTag: "latest"
  # Option to overwrite the globals.dockerRepository
  dockerRepository: ""
  containerPorts:
    apiportal: 443

  # Controls the service for the API-Portal
  service:
    type: "ClusterIP"
    loadBalancerIP: ""
    port: 443
    nodePort: ""
    labels: { }
    annotations: { }

  config:
    # Enable if you would like to pre-configure the API-Manager service in API-Portal
    master: { }
    # name: "Master"
    # host: "apimgr"
    # port: "8075"
    ssl:
      enabled: true
      generateCertificates: true
      # Use an existing secret object for the required certificates.
      # Certificate and Key must be stored with keys: apiportal.crt and apiportal.key:
      existingSecret: ""
    tryIt:
    # enabledGet: true
    # enabledPost: true
    # enabledPut: true
    # enabledDelete: true
    # enabledPatch: true
    # enabledHead: true
    # enabledOptions: false
    redirectAfterLogin:
    # url: "/home"
    informationSource:
    # name: "summary" # Must be summary or description
    monitoringRange:
    # value: "2" # is an integer, which range is 2 to 6
    sessionTimeout:
    # timehoutHours: "24"
    clamAv:
    # host: ""
    # port: ""
    loginProtection:
    # attemptsBeforeLock: "3"
    # attemptsBeforeRecapcha: "3"
    # lockDurationSec: "600"
    # lockIp: ""
    sso:
    # path: ""
    # entityId: ""
    # whitelist: ""
    whitelist:
    # enabled: true
    # oauthWhitelist: ""
    # apiWhitelist: ""

  redis:
    enabled: false
    internal: false
    host: "apiportal-redis-headless"
    port: "6379"
    cacheTimeout: "600"

  # Allows you to add any environment variables
  extraEnvs: [ ]
  # - name: MY_ENVIRONMENT_VAR
  #   value: the_value_goes_here

  # General ingress settings.
  httpproxy:
    enabled: true
    name: apiportal
    fqdn: apiportal-uatk8apim.bcthk.info
    protocol: tls
    port: 443
    secretName: cert-delegation/tls-secret

  securityContext: { }

  # If enabled required PVCs for the API-Portal are created
  persistence:
    enabled: true

  # Allows you to add any config files
  extraVolumes: [ ]
  # - name: extras
  #   emptyDir: {}
  extraVolumeMounts: [ ]
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

  # A list of secrets and their paths to mount inside the pod
  # This is useful for mounting certificates for security other sensitive values
  secretMounts: [ ]
  #  - name: some-secret-stuff
  #    secretName: some-secret-stuff
  #    path: /opt/Axway/apigateway/conf/some/secret

  # 1048 is the Apache user, which is required during installation
  podSecurityContext:
    runAsUser: 1048
    fsGroup: 1048

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

  nameOverride: ""

  labels: { }

  podAnnotations: { }

  readinessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: readiness.apiportal
      path: /
      port: apiportal
      scheme: HTTPS
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  livenessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: liveness.apiportal
      path: /
      port: apiportal
      scheme: HTTPS
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  resources:
    requests:
      cpu: "100m"
      memory: "500Mi"
    limits:
      cpu: "500m"
      memory: "1000Mi"

  args: [ ]
  # - /do/some/other/stuff

  command: [ ]
  # e.g. a do nothing command
  # command: [ "sh", "-c", "tail -f /dev/null" ]

  extraContainers: [ ]
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

##################################################################################################################################
#   API Analytics
##################################################################################################################################
analytics:
  name: apimanalytics
  enabled: true
  # For API Analytics it is recommended to have only 1 replica
  replicas: 1
  nameOverride: ""
  image: "apim_uat/apim_aga"
  imageTag: "latest"
  imagePullPolicy: "Always" #either Always or IfNotPresent
  containerPorts:
    aga: 8040

  service:
    type: "ClusterIP"
    loadBalancerIP: ""
    labels: { }
    annotations: { }
    ports:
      - name: aga
        port: 8040
        targetPort: 8040
        nodePort: ""
        ingress:
          enabled: true
          host: aga

  # Configuration is based on environment variables as desribed here:
  # https://docs.axway.com/bundle/axway-open-docs/page/docs/apim_installation/apigw_containers/container_env_variables/index.html#environment-variables-reference
  config: { }
    # Comma separated list of hosts:port
    # emtAnmHosts:
    # emtPollInterval: 30
    # emtDeploymentEnabled: false
  # emtHeapSize: 1024
  # emtTraceLevel: INFO
  # emtParentHost: "api-manager"

  # Allows you to add any environment variables
  extraEnvs:
    - name: SMTP_HOST
      value: "bctrelay.ad01.bcthk.com"
    - name: SMTP_PORT
      value: "25"
    - name: SMTP_CONNTYPE
      value: "NONE"

  # - name: MY_ENVIRONMENT_VAR
  #   value: the_value_goes_here

  # Allows you to add any config files
  extraVolumes: [ ]
  # - name: extras
  #   emptyDir: {}
  extraVolumeMounts: [ ]
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

  httpproxy:
    enabled: true
    name: analytics
    fqdn: aga-uatk8apim.bcthk.info
    protocol: tls
    port: 8040
    secretName: cert-delegation/tls-secret

  podAnnotations: { }

  args:
    - /opt/Axway/analytics/posix/bin/start-emt-analytics

  securityContext: { }

  #podSecurityContext:
  #runAsUser: 1000
  #fsGroup: 1000

  readinessProbe:
    httpGet:
      httpHeaders:
        - name: k8sprobe
          value: readiness.analytics
      path: /healthcheck
      port: aga
      scheme: HTTPS
    # tcpSocket is causing "Success. SSL system call failed"
    #      tcpSocket:
    #          port: aga
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1

  livenessProbe:
    httpGet:
      path: /healthcheck
      port: aga
      httpHeaders:
        - name: k8sprobe
          value: liveness.analytics
      scheme: HTTPS
    # tcpSocket is causing "Success. SSL system call failed"
    #      tcpSocket:
    #          port: aga
    initialDelaySeconds: 300
    periodSeconds: 30
    timeoutSeconds: 15
    failureThreshold: 3
    successThreshold: 1

  resources:
    requests:
      cpu: "200m"
      memory: "750Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"

  lifecycle:
    preStop:
      exec:
        command: [ "sleep","10" ]

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  # Configure JVM settings
  jvm:
    # Set to false if you prefer to include (bake in) your jvm.xml using the mergeDir option
    enabled: false
    config: |
      <ConfigurationFragment>
         <VMArg name="-DCASSANDRA_PROTOCOL_VERSION=4" />
         <VMArg name="-Dio.swagger.parser.util.RemoteUrl.trustAll=true"/>
         <VMArg name="-Dio.swagger.v3.parser.util.RemoteUrl.trustAll=true"/>
      </ConfigurationFragment>

##################################################################################################################################
#   AMPLIFY AGENTS
##################################################################################################################################

agents:
  dockerRepository: "axway.jfrog.io/ampc-public-docker-release/agent"
  # You may use an existing secret that contains all required secure information with the following keys:
  # private_key.pem - They private key used for the Amplify-Central communication
  # public_key.pem - They public key used for the Amplify-Central communication
  # apimgr-auth-password - Password used to authenticate with the API-Manager
  # If set, this secret is automatically mounted
  existingSecret:
  central:
    clientId: amplify-client
    # You may provide the private-key in your local values
    privateKey: [ ] # |
      # -----BEGIN PRIVATE KEY-----
    # MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCy6I5t5R0qKHWR
    # UN7Cgzz2raYhdZzQKWktVRvNnAVaJKrmK981nNIWqB8enooRTDVFEp7XazAZGDVN
    # ....
    # You may provide the public-key in your local values
    publicKey: [ ] # |
      # -----BEGIN PUBLIC KEY-----
    # MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsuiObeUdKih1kVDewoM8
    # 9q2mIXWc0ClpLVUbzZwFWiSq5ivfNZzSFqgfHp6KEUw1RRKe12swGRg1TWr5DBs/
    # ....
    organizationId: 230.........343
    environment: test
    # Defaults to /opt/keys/private_key.pem which matches to the mounted secret
    privateKeyLocation:
    # Defaults to /opt/keys/public_key.pem which matches to the mounted secret
    publicKeyLocation:

  # ----------- Discovery agent -------------
  discovery:
    enabled: false
    replicas: 1
    image: "v7-discovery-agent"
    imageTag: "1.1.6"
    # command: [ "sh", "-c", "tail -f /dev/null" ]

    # Configuration of the discovery agent
    agentName: test
    apimanager:
      username: apiadmin
      password: changeme
      port: 8075
      host: 100.66.229.184
      insecureSSL: "false"
    logLevel: info
    logOutput: stdout
    logPath: logs

    readinessProbe:
      httpGet:
        httpHeaders:
          - name: k8sprobe
            value: readiness.discoveryAgent
        path: /status
        port: 8989
        scheme: HTTP
      initialDelaySeconds: 20
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1

    livenessProbe:
      httpGet:
        httpHeaders:
          - name: k8sprobe
            value: liveness.discoveryAgent
        path: /status
        port: 8989
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 1

    labels: { }
    podAnnotations: { }

  # ----------- Traceability agent -------------
  # TBD

  updateStrategy: { }

  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000

##################################################################################################################################
#   PVCs
##################################################################################################################################

pvcs:
  # Events is used by ANM, APIMGR and APITRAFFIC
  events:
    # If disabled an emptyDir volume is used instead
    # Useful if you stream log information to an external logging system
    enabled: true
    eventsVolumeClaim:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs
      volumeMode: Filesystem
      volumeName: apigw-events-pv

  # OpenTraffic is used by APIMGR and APITRAFFIC
  opentraffic:
    # If disabled an emptyDir volume is used instead
    # Useful if you stream log information to an external logging system
    enabled: true
    opentrafficVolumeClaim:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs
      volumeMode: Filesystem
      volumeName: apigw-opentraffic-pv

  # Trace is used by APIMGR and APITRAFFIC
  trace:
    # If disabled an emptyDir volume is used instead
    # Useful if you stream log information to an external logging system
    enabled: true
    traceVolumeClaim:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs
      volumeMode: Filesystem
      volumeName: apigw-trace-pv

  # Trace is used by ANM
  audit:
    # If disabled an emptyDir volume is used instead
    # Useful if you stream log information to an external logging system
    enabled: true
    auditVolumeClaim:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: nfs
      volumeMode: Filesystem
      volumeName: apigw-audit-pv

  metricsDbVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 10Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalDbVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 20Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalImagesVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 5Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalEnckeyVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalLanguageVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalTemplatesVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalAdmLanguageVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi
    storageClassName: bct-tanzu-sp-dr

  apiportalCertsVolumeClaim:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 1Gi
    storageClassName: bct-tanzu-sp-dr

##################################################################################################################################
#   CASSANDRA DATABASE
##################################################################################################################################
cassandra:
  # Set to false, to use an existing (external) Cassandra-DB
  internal: false

  # Only a subset of possible parameters is mentioned here. You can review and use all configuration values
  # as documented here:
  # https://github.com/bitnami/charts/blob/master/bitnami/cassandra/values.yaml

  nameOverride: "cassandra"
  fullnameOverride: "cassandra"

  dbUser:
    # You need to configure Cassandra authentication with ${environment.CASS_USERNAME} using Policy-Studio
    user: cassandra
    # You need to configure Cassandra authentication with ${environment.CASS_PASS} using Policy-Studio
    # Please note: When not providing a password or secret, it must be provided during Helm release upgrades
    password: "cassandra"
    # Use an existing secret object for dbUser.user password (will ignore dbUser.password)
    # Password must be stored using key: cassandra-password
    existingSecret: ""

  service:
    # Port is required here when using an external C* service
    host1: "192.168.235.37"
    host2: "192.168.235.39"
    host3: "192.168.235.40"
    port1: "9042"
    port2: "9042"
    port3: "9042"
    replication: "3"
    read: "LOCAL_QUORUM"
    write: "LOCAL_QUORUM"

  cluster:
    # Name of the cluster - You cannot change this later
    name: "axway-apim-management"
    # Keyspace to use - You cannot change this later
    keyspace: "axway-apim-management"

  persistence:
    # @param persistence.enabled Enable Cassandra data persistence using PVC, use a Persistent Volume Claim, If false, use emptyDir
    enabled: true
    # @param persistence.storageClass PVC Storage Class for Cassandra data volume
    # If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning
    # If undefined (the default) or set to null, no storageClassName spec is
    #   set, choosing the default provisioner.  (gp2 on AWS, standard on GKE, AWS & OpenStack)
    storageClass: "bct-tanzu-sp-dr"
    # @param persistence.size PVC Storage Request for Cassandra data volume
    size: 8Gi

  metrics:
    # Start a side-car prometheus exporter
    enabled: false


##################################################################################################################################
#   EXTERNAL Metrics DB
##################################################################################################################################

# Is used by ANM, API-Manager and API-Gateway to establish the Metrics-DB-Connection
# This is ignored, when using mysqlmetrics.internal.
externalMetricsDB:
  env:
    - name: METRICS_DB_URL
      value: "jdbc:mysql://192.168.235.38:3306/api_analytics?useSSL=false"
    - name: METRICS_DB_USERNAME
      value: "axway"
    - name: METRICS_DB_PASS
      valueFrom:
        secretKeyRef:
          name: analytics-mysql
          key: dbPasswordKey

##################################################################################################################################
#   EXTERNAL API-Portal DB
##################################################################################################################################

# Is used by the API-Portal to establish the API-Portal-DB-Connection
# This is ignored, when using mysqlapiportal.internal.
externalApiportalDB:
  env:
    - name: MYSQL_HOST
      value: "192.168.235.38"
    - name: MYSQL_PORT
      value: "3306"
    - name: MYSQL_DATABASE
      value: "api_portal"
    - name: MYSQL_USER
      value: "axway"
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: analytics-mysql
          key: dbPasswordKey

##################################################################################################################################
#   INTERNAL METRICS DATABASE
##################################################################################################################################
mysqlmetrics:
  internal: false
  ssl: false
  allowPublicKeyRetrieval: true

  # Only a subset of possible parameters is mentioned here. You can review and use all configuration values
  # as documented here:
  # https://github.com/bitnami/charts/blob/master/bitnami/mysql/values.yaml

  image:
  # registry: docker.io
  # repository: bitnami/mysql
  # tag: 8.0.27-debian-10-r8

  name: "metricsdb"
  nameOverride: "metricsdb"
  fullnameOverride: "metricsdb"

  primary:
    service:
      port: 3306
    persistence:
      enabled: true
      existingClaim: apigw-mysql-metrics

  auth:
    database: "metrics"
    # If not set a password is randomly generated
    # Please note: You need to provide the generated password to upgrade the release
    rootPassword: "changeme"
    username: "report"
    # If not set a password is randomly generated
    # Please note: You need to provide the generated password to upgrade the release
    password: "changeme"
    # An existing secret must contain the keys mysql-root-password / mysql-password
    existingSecret: ""

  initdbScriptsConfigMap: metrics

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

##################################################################################################################################
#   INTERNAL API-Portal DATABASE
##################################################################################################################################
mysqlapiportal:
  internal: false

  # Only a subset of possible parameters is mentioned here. You can review and use all configuration values
  # as documented here:
  # https://github.com/bitnami/charts/blob/master/bitnami/mysql/values.yaml

  nameOverride: "mysqlapiportal"
  fullnameOverride: "mysqlapiportal"

  primary:
    persistence:
      enabled: true
      existingClaim: apigw-mysql-apiportal

  auth:
    database: "apiportal"
    # If not set a password is randomly generated
    # Please note: You need to provide the generated password to upgrade the release
    rootPassword: "changeme"
    username: "report"
    # If not set a password is randomly generated
    # Please note: You need to provide the generated password to upgrade the release
    password: "changeme"
    # An existing secret must contain the keys mysql-root-password / mysql-password
    existingSecret: ""

  securityContext: { }

  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

##################################################################################################################################
#   INTERNAL REDIS DATABASE
##################################################################################################################################
apiportalredis:
  nameOverride: "apiportal-redis"
  fullnameOverride: "apiportal-redis"
  architecture: "standalone"
  auth:
    # Redis with AuthN is not supported by the API-Portal
    enabled: false

##################################################################################################################################
#   BASE - IMAGE for OpenShift only
##################################################################################################################################
base:
  useImagestream: false
  imageName:
  imageTag:
